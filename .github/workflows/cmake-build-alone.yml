name: build-alone

on:
  push:
    branches: [ "test-build-alone" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: checkout project and submodule
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependency
      run: sudo apt-get install libopenblas-dev

    # - name: Install dependency
    #   run: sudo apt-get install autoconf automake libtool make g++ unzip protobuf-compiler libgoogle-glog-dev libboost-all-dev liblz4-dev librocksdb-dev libssl-dev libopenblas-dev libleveldb-dev libsnappy-dev libprotobuf-dev
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF -DOPENBLAS_NO_AVX512=ON

    - name: Build DFL
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL
    
    - name: Build DFL introducer
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL_introducer
      
    - name: Build DFL simulator
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL_simulator_mt
    
    - name: Build DFL reputation dll
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target reputation_api_sample

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  run: ctest -C ${{env.BUILD_TYPE}}
      
  build-macos:
    runs-on: macos-latest

    steps:
      - name: checkout project and submodule
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # - name: Install dependency
      #   run: brew install protobuf glog boost lz4 rocksdb openssl@3 openblas leveldb snappy

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_OPENCV=OFF

      - name: Build DFL
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL

      - name: Build DFL introducer
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL_introducer

      - name: Build DFL simulator
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target DFL_simulator_mt

      - name: Build DFL reputation dll
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target reputation_api_sample

      #- name: Test
      #  working-directory: ${{github.workspace}}/build
      #  run: ctest -C ${{env.BUILD_TYPE}}